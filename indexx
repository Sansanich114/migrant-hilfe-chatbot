<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>DeepSeek Chatbot</title>
  <style>
    /* Reset & Base Styling */
    * { box-sizing: border-box; margin: 0; padding: 0; }
    body {
      font-family: Arial, sans-serif;
      background: #FFF8E1; /* Creme white */
      color: #3E2723; /* Dark brown text */
      display: flex;
      flex-direction: column;
      height: 100vh;
      transition: background 0.3s, color 0.3s;
    }

    /* Bright Mode Styles (Default) */
    .chat-container {
      flex: 1;
      overflow-y: auto;
      padding: 20px;
      background: #FFF8E1;
      transition: background 0.3s;
    }
    .message {
      display: flex;
      margin-bottom: 15px;
      align-items: flex-start;
    }
    .message.bot { flex-direction: row; }
    .message.user { flex-direction: row-reverse; }
    .avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      margin: 0 10px;
      object-fit: cover;
    }
    .bubble {
      max-width: 70%;
      padding: 10px 15px;
      border-radius: 15px;
      position: relative;
      background: #FFE0B2; /* Light orange cream for bot */
      color: #3E2723;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      transition: background 0.3s, color 0.3s;
    }
    .message.user .bubble {
      background: #BBDEFB; /* Light blue for user */
      border-top-right-radius: 0;
    }
    .message.bot .bubble {
      border-top-left-radius: 0;
    }
    .suggestions {
      display: flex;
      flex-wrap: wrap;
      padding: 10px 20px;
      background: #FFF8E1;
      border-top: 1px solid #ddd;
      transition: background 0.3s;
    }
    .suggestion {
      background: #FFF8E1;
      border: 1px solid #D7CCC8;
      border-radius: 20px;
      padding: 5px 15px;
      margin: 5px;
      font-size: 14px;
      cursor: pointer;
      transition: background 0.2s;
    }
    .suggestion:hover {
      background: #f0f0f0;
    }
    .input-container {
      display: flex;
      padding: 10px 20px;
      background: #FFF8E1;
      border-top: 1px solid #ddd;
      transition: background 0.3s;
    }
    .input-container input {
      flex: 1;
      padding: 10px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 5px;
      background: #FFECB3;
      color: #3E2723;
      transition: background 0.3s, color 0.3s;
    }
    .input-container button {
      padding: 10px 20px;
      font-size: 16px;
      margin-left: 10px;
      border: none;
      background: #8D6E63;
      color: #FFF8E1;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.2s;
    }
    .input-container button:hover {
      background: #795548;
    }
    /* Dark Mode Styles */
    body.dark-mode {
      background: #4E342E; /* Cool dark brown */
      color: #FFECB3; /* Light creme text */
    }
    body.dark-mode .chat-container {
      background: #4E342E;
    }
    body.dark-mode .bubble {
      color: #FFECB3;
    }
    body.dark-mode .message.bot .bubble {
      background: #6D4C41; /* Distinct dark tone for bot */
      border-top-left-radius: 0;
    }
    body.dark-mode .message.user .bubble {
      background: #8D6E63; /* Different tone for user */
      border-top-right-radius: 0;
    }
    body.dark-mode .input-container {
      background: #4E342E;
    }
    body.dark-mode .input-container input {
      background: #5D4037;
      color: #FFECB3;
      border: 1px solid #555;
    }
    body.dark-mode .suggestions {
      background: #4E342E;
    }
    body.dark-mode .suggestion {
      background: #5D4037; /* Dark background for suggestions */
      border-color: #BCAAA4;
      color: #FFECB3;
    }
    body.dark-mode .suggestion:hover {
      background: #6D4C41;
    }
    /* Dark Mode Toggle Button */
    .dark-mode-toggle {
      position: fixed;
      top: 10px;
      right: 10px;
      background: #8D6E63;
      color: #FFF8E1;
      border: none;
      padding: 8px 12px;
      border-radius: 4px;
      cursor: pointer;
      z-index: 1000;
      transition: background 0.2s;
    }
    .dark-mode-toggle:hover {
      background: #795548;
    }
    /* Responsive adjustments for mobile */
    @media (max-width: 600px) {
      .bubble { max-width: 85%; }
      .input-container input, .input-container button { font-size: 14px; padding: 8px; }
      .suggestion { font-size: 12px; padding: 4px 10px; }
      .avatar { width: 35px; height: 35px; }
    }
  </style>
</head>
<body>
  <!-- Dark Mode Toggle Button -->
  <button class="dark-mode-toggle" id="darkModeToggle">Dark Mode</button>
  
  <!-- Chat Window -->
  <div class="chat-container" id="chatContainer">
    <!-- Chat messages will appear here -->
  </div>
  
  <!-- Predictive Questions -->
  <div class="suggestions" id="suggestions">
    <!-- Suggested questions will be added here -->
  </div>
  
  <!-- Input Area -->
  <div class="input-container">
    <input type="text" id="chatInput" placeholder="Type your message..." />
    <button id="sendBtn">Send</button>
  </div>
  
  <script>
    // Avatars for bot and user (replace URLs with your preferred images)
    const avatars = {
      bot: 'https://via.placeholder.com/40?text=Bot',
      user: 'https://via.placeholder.com/40?text=You'
    };

    // Predictive questions suggestions
    const predictiveQuestions = [
      "What documents do I need?",
      "How do I apply for a visa?",
      "What are the housing options?",
      "How can I find a job?",
      "What is the cost of living in Germany?"
    ];

    // Populate predictive suggestions
    const suggestionsDiv = document.getElementById('suggestions');
    predictiveQuestions.forEach(question => {
      const suggestionBtn = document.createElement('div');
      suggestionBtn.className = 'suggestion';
      suggestionBtn.innerText = question;
      suggestionBtn.onclick = () => {
        document.getElementById('chatInput').value = question;
      };
      suggestionsDiv.appendChild(suggestionBtn);
    });

    const chatContainer = document.getElementById('chatContainer');

    // Function to add a message to the chat
    function addMessage(sender, text) {
      const messageDiv = document.createElement('div');
      messageDiv.className = 'message ' + sender;
      
      const avatarImg = document.createElement('img');
      avatarImg.className = 'avatar';
      avatarImg.src = avatars[sender];
      
      const bubbleDiv = document.createElement('div');
      bubbleDiv.className = 'bubble';
      bubbleDiv.innerText = text;
      
      messageDiv.appendChild(avatarImg);
      messageDiv.appendChild(bubbleDiv);
      chatContainer.appendChild(messageDiv);
      chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    // On page load, display an introductory message from the bot
    window.onload = function() {
      addMessage('bot', 'Hello! I am DeepSeek, your assistant for migration to Germany. How can I help you today?');
    };

    // Send message functionality
    document.getElementById('sendBtn').addEventListener('click', sendMessage);
    document.getElementById('chatInput').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') sendMessage();
    });

    function sendMessage() {
      const inputField = document.getElementById('chatInput');
      const userMessage = inputField.value.trim();
      if (!userMessage) return;
      
      // Add user's message to the chat
      addMessage('user', userMessage);
      inputField.value = '';

      // Replace this simulation with an API call to your /chat endpoint.
      setTimeout(() => {
        addMessage('bot', 'This is a simulated response.');
      }, 1000);
    }

    // Dark mode toggle functionality
    const darkModeToggle = document.getElementById('darkModeToggle');
    darkModeToggle.addEventListener('click', () => {
      document.body.classList.toggle('dark-mode');
      darkModeToggle.innerText = document.body.classList.contains('dark-mode') ? 'Light Mode' : 'Dark Mode';
    });
  </script>
</body>
</html>
